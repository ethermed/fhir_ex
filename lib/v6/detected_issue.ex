defmodule Fhir.v6().DetectedIssue do
  use TypedStruct

  typedstruct do
    field(:_detail, Fhir.v6().Element)
    field(:_identifiedDateTime, Fhir.v6().Element)
    field(:_implicitRules, Fhir.v6().Element)
    field(:_language, Fhir.v6().Element)
    field(:_reference, Fhir.v6().Element)
    field(:_severity, Fhir.v6().Element)
    field(:_status, Fhir.v6().Element)
    field(:author, Fhir.v6().Reference)
    field(:category, [Fhir.v6().CodeableConcept], default: [])
    field(:code, Fhir.v6().CodeableConcept)
    field(:contained, [Fhir.v6().ResourceList], default: [])
    field(:detail, :string)
    field(:encounter, Fhir.v6().Reference)
    field(:evidence, [Fhir.v6().DetectedIssueEvidence], default: [])
    field(:extension, [Fhir.v6().Extension], default: [])
    field(:id, :string)
    field(:identifiedDateTime, :string)
    field(:identifiedPeriod, Fhir.v6().Period)
    field(:identifier, [Fhir.v6().Identifier], default: [])
    field(:implicated, [Fhir.v6().Reference], default: [])
    field(:implicitRules, :string)
    field(:language, :string)
    field(:meta, Fhir.v6().Meta)
    field(:mitigation, [Fhir.v6().DetectedIssueMitigation], default: [])
    field(:modifierExtension, [Fhir.v6().Extension], default: [])
    field(:reference, :string)
    field(:resourceType, :string, default: "DetectedIssue")
    field(:severity, :string)
    field(:status, :string)
    field(:subject, Fhir.v6().Reference)
    field(:text, Fhir.v6().Narrative)
  end
end
